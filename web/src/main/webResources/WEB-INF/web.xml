<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee" 
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
            xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" 
            version="2.4">
            
    <display-name>geonetwork</display-name>
  
    <!-- H2 DB starter configuration / remove if you don't use H2 -->
    <listener>
      <listener-class>org.h2.server.web.DbStarter</listener-class>
    </listener>
  
    <!-- shut down java cache used for xlinks and spatial index -->
    <listener>
        <listener-class>
            org.apache.jcs.utils.servlet.JCSServletContextListener
        </listener-class>
    </listener>

    <!-- url rewrite filter -->
    <filter>
        <filter-name>UrlRewriteFilter</filter-name>
        <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
        <!-- set the amount of seconds the conf file will be checked for reload. can be a valid integer (0 denotes
            check every time, empty/not set denotes no reload check)
        <init-param>
            <param-name>confReloadCheckInterval</param-name>
            <param-value>60</param-value>
        </init-param>
        -->

        <!-- sets up log level (will be logged to context log). Can be: TRACE, DEBUG, INFO (default), WARN, ERROR,
            FATAL, log4j, commons, sysout:{level} (ie, sysout:DEBUG). If you are having trouble using normal levels use
            sysout:DEBUG -->
        <init-param>
            <param-name>logLevel</param-name>
            <param-value>WARN</param-value>
        </init-param>

        <!-- you can disable status page if desired. Can be: true, false (default true) -->
        <init-param>
            <param-name>statusEnabled</param-name>
            <param-value>true</param-value>
        </init-param>

        <!-- you can change status path so that it does not conflict with your installed apps (note: defaults to
            /rewrite-status). Note: must start with / -->
        <init-param>
            <param-name>statusPath</param-name>
            <param-value>/status</param-value>
        </init-param>
    </filter>

    <!-- logo servlet -->
    <filter>
        <filter-name>logos</filter-name>
        <filter-class>org.fao.geonet.logos.LogoFilter</filter-class>
        <!-- Specified what overrides to use if the
        	(servlet.getServletContext().getServletContextName()).jeeves.configuration.overrides.file
        	system parameter is not specified.
          -->
        <init-param>
            <param-name>jeeves.configuration.overrides.file</param-name>
            <param-value>${system.specific.overrides},${web.xml.main.config.overrides}${web.xml.widget.config.overrides}</param-value>
        </init-param>
    </filter>


    <filter-mapping>
        <filter-name>UrlRewriteFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>logos</filter-name>
        <url-pattern>/images/logos/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>logos</filter-name>
        <url-pattern>/images/harvesting/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>gn-servlet</servlet-name>
        <servlet-class>jeeves.server.sources.http.JeevesServlet</servlet-class>
        <!-- Specified what overrides to use if the 
        	(servlet.getServletContext().getServletContextName()).jeeves.configuration.overrides.file 
        	system parameter is not specified.
          -->
		<init-param>
			<param-name>jeeves.configuration.overrides.file</param-name>
			<param-value>${system.specific.overrides},${web.xml.main.config.overrides}${web.xml.widget.config.overrides}</param-value>
		</init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

        <!-- Servlet proxy -->
    <servlet>
        <servlet-name>HttpProxy</servlet-name>
        <servlet-class>org.geonetwork.http.proxy.HttpProxyServlet</servlet-class>
        
        <!-- List of allowed content types -->
    <init-param>
      <param-name>AllowedContentTypes</param-name>
      <param-value>
          application/xml,text/xml,
          text/html,
          text/plain,
          application/vnd.ogc.se_xml,
          application/vnd.ogc.se+xml,
          application/vnd.ogc.success+xml,
          application/vnd.ogc.wms_xml,
          application/vnd.ogc.context+xml,
          application/vnd.ogc.gml,
          application/vnd.ogc.sld+xml,
          application/vnd.google-earth.kml+xml,
          application/json
      </param-value>
    </init-param>

    <!-- List of host alloed to be accesed by the proxy: If not specified or empty, any hosts is allowed -->
    <init-param>
        <param-name>AllowedHosts</param-name>
        <param-value />
    </init-param>

    <!-- Default proxy url if none is provided -->
    <init-param>
        <param-name>DefaultProxyUrl</param-name>
        <param-value>http://www.openlayers.org</param-value>
    </init-param>

    <load-on-startup>0</load-on-startup>
    </servlet>

    <!-- Print servlet -->
    <servlet>
        <servlet-name>mapfish.print</servlet-name>
        <servlet-class>org.mapfish.print.servlet.MapPrinterServlet</servlet-class>
        <init-param>
              <param-name>config</param-name>
              <param-value>print-config.yaml</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>mapfish.print</servlet-name>
        <url-pattern>/pdf/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>HttpProxy</servlet-name>
        <url-pattern>/proxy</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>gn-servlet</servlet-name>
        <url-pattern>/srv/*</url-pattern>
    </servlet-mapping>

    <!-- Web map context servlet -->
    <servlet>
        <servlet-name>wmc</servlet-name>
        <servlet-class>org.geonetwork.map.wmc.WmcServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>wmc</servlet-name>
        <url-pattern>/wmc/*</url-pattern>
    </servlet-mapping>
    
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <session-config>
        <!-- 3 hours -->
        <session-timeout>180</session-timeout>
    </session-config>
</web-app>